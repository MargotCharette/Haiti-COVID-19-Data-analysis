# This script uses the p_load() function from pacman R package,
# which installs if package is absent, and loads for use if already installed
# Ensures the package "pacman" is installed
if (!require("pacman")) install.packages("pacman")
# Packages available from CRAN
##############################
pacman::p_load(
tidyr,
dplyr,
readxl,
XML,
openxlsx,
lubridate,
ggplot2,
epitools,
EpiCurve,
incidence,
here,
rio,
# gis
######
sf,               # to manage spatial data using a Simple Feature format
tmap,             # to produce simple maps, works for both interactive and static maps
OpenStreetMap,    # to add OSM basemap in ggplot map
spdep,            # spatial statistics
)
install.packages("OpenStreetMap")
Data_Covid <- import(here("data", "Data_Covid.xlsx"))
head(Data_Covid)
Data_Covid$data.g_Patient.Sexe[Data_Covid$data.g_Patient.Sexe =="Feminin" ]<- "feminin"
Data_Covid$data.g_Patient.Sexe[Data_Covid$data.g_Patient.Sexe =="Masculin" ]<- "masculin"
covid_1 <- covid %>% group_by(dept_resid) %>% tally()
covid_2 <- covid %>% group_by(dept_resid, commune_resid) %>% tally()
covid_3 <- covid %>% group_by(dept_resid, commune_resid, patient_sex) %>% tally()
ggplot(data=covid_2, aes(x=commune_resid, y=n, fill=dept_resid)) + geom_bar(stat='identity')
covid <- Data_Covid %>% filter(data.g_Prelevements.Pathologie=="Covid-19") %>% mutate(date_notif_visit= as.Date(data.g_Notification.Date_visite, format="%Y/%m/%d"),
date_notif= as.Date(data.g_Notification.Date_notification, format="%Y/%m/%d"),
patient_sex= data.g_Patient.Sexe,
patient_age= as.integer(data.g_Patient.Age_Patient),
patient_type= data.g_Prelevements.Defition_Cas,
dept_resid= data.g_Patient.Departement_Residence,
commune_resid= data.g_Patient.Commune_Residence,
date_collection= as.Date(data.g_Echantillon.Date_Collection, format="%Y/%m/%d"),
date_deposit= as.Date(data.g_Echantillon.Date_Depot, format="%Y/%m/%d"),
date_result= as.Date(data.g_resultat.Date_resultat, origin="1899-12-30"),
week_result= epiweek(date_result),  # Test. Not necessarily needed
result_covid= data.g_resultat.Resultats_Covid.19)
